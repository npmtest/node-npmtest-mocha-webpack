{"/home/travis/build/npmtest/node-npmtest-mocha-webpack/test.js":"/* istanbul instrument in package npmtest_mocha_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-mocha-webpack/lib.npmtest_mocha_webpack.js":"/* istanbul instrument in package npmtest_mocha_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_mocha_webpack = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_mocha_webpack = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-mocha-webpack/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-mocha-webpack && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_mocha_webpack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_mocha_webpack\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_mocha_webpack.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_mocha_webpack.rollup.js'] =\n            local.assetsDict['/assets.npmtest_mocha_webpack.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_mocha_webpack.__dirname + '/lib.npmtest_mocha_webpack.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/bin/mocha-webpack":"#!/usr/bin/env node\nrequire('../lib/cli');\n","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/cli/index.js":"'use strict';\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _parseArgv = require('./parseArgv');\n\nvar _parseArgv2 = _interopRequireDefault(_parseArgv);\n\nvar _prepareWebpack = require('./prepareWebpack');\n\nvar _prepareWebpack2 = _interopRequireDefault(_prepareWebpack);\n\nvar _runner = require('./runner');\n\nvar _exists = require('../util/exists');\n\nvar _parseConfig = require('./parseConfig');\n\nvar _parseConfig2 = _interopRequireDefault(_parseConfig);\n\nvar _requireWebpackConfig = require('./requireWebpackConfig');\n\nvar _requireWebpackConfig2 = _interopRequireDefault(_requireWebpackConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction resolve(mod) {\n  var absolute = (0, _exists.existsFileSync)(mod) || (0, _exists.existsFileSync)(mod + '.js');\n  var file = absolute ? _path2.default.resolve(mod) : mod;\n  return file;\n}\n\nvar cliOptions = (0, _parseArgv2.default)(process.argv.slice(2), true);\nvar configOptions = (0, _parseConfig2.default)(cliOptions.opts);\nvar defaultOptions = (0, _parseArgv2.default)([]);\n\nvar options = _lodash2.default.defaults({}, cliOptions, configOptions, defaultOptions);\n\noptions.require.forEach(function (mod) {\n  require(resolve(mod)); // eslint-disable-line global-require\n});\n\noptions.include = options.include.map(resolve);\n\noptions.webpackConfig = (0, _requireWebpackConfig2.default)(options.webpackConfig);\n\n(0, _prepareWebpack2.default)(options, function (err, webpackConfig) {\n  if (err) {\n    throw err;\n  } else if (options.watch) {\n    (0, _runner.watch)(options, webpackConfig);\n  } else {\n    (0, _runner.run)(options, webpackConfig);\n  }\n});","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/cli/parseArgv.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = parseArgv;\n\nvar _yargs = require('yargs');\n\nvar _yargs2 = _interopRequireDefault(_yargs);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _package = require('../../package.json');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BASIC_GROUP = 'Basic options:';\nvar OUTPUT_GROUP = 'Output options:';\nvar ADVANCED_GROUP = 'Advanced options:';\n\nvar options = {\n  'async-only': {\n    alias: 'A',\n    type: 'boolean',\n    describe: 'force all tests to take a callback (async) or return a promise',\n    group: ADVANCED_GROUP\n  },\n  colors: {\n    alias: 'c',\n    type: 'boolean',\n    default: undefined,\n    describe: 'force enabling of colors',\n    group: OUTPUT_GROUP\n  },\n  growl: {\n    alias: 'G',\n    type: 'boolean',\n    describe: 'enable growl notification support',\n    group: OUTPUT_GROUP\n  },\n  recursive: {\n    type: 'boolean',\n    describe: 'include sub directories',\n    group: ADVANCED_GROUP\n  },\n  'reporter-options': {\n    alias: 'O',\n    type: 'string',\n    describe: 'reporter-specific options, --reporter-options <k=v,k2=v2,...>',\n    group: OUTPUT_GROUP,\n    requiresArg: true\n  },\n  reporter: {\n    alias: 'R',\n    type: 'string',\n    describe: 'specify the reporter to use',\n    group: OUTPUT_GROUP,\n    default: 'spec',\n    requiresArg: true\n  },\n  bail: {\n    alias: 'b',\n    type: 'boolean',\n    describe: 'bail after first test failure',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  glob: {\n    type: 'string',\n    describe: 'only run files matching <pattern> (only valid for directory entry)',\n    group: ADVANCED_GROUP,\n    requiresArg: true\n  },\n  grep: {\n    alias: 'g',\n    type: 'string',\n    describe: 'only run tests matching <pattern>',\n    group: ADVANCED_GROUP,\n    requiresArg: true\n  },\n  fgrep: {\n    alias: 'f',\n    type: 'string',\n    describe: 'only run tests containing <string>',\n    group: ADVANCED_GROUP,\n    requiresArg: true\n  },\n  invert: {\n    alias: 'i',\n    type: 'boolean',\n    describe: 'inverts --grep and --fgrep matches',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  require: {\n    alias: 'r',\n    type: 'string',\n    describe: 'require the given module',\n    group: ADVANCED_GROUP,\n    requiresArg: true,\n    multiple: true\n  },\n  include: {\n    type: 'string',\n    describe: 'include the given module into test bundle',\n    group: ADVANCED_GROUP,\n    requiresArg: true,\n    multiple: true\n  },\n  slow: {\n    alias: 's',\n    describe: '\"slow\" test threshold in milliseconds',\n    group: ADVANCED_GROUP,\n    default: 75,\n    defaultDescription: '75 ms',\n    requiresArg: true\n  },\n  timeout: {\n    alias: 't',\n    describe: 'set test-case timeout in milliseconds',\n    group: ADVANCED_GROUP,\n    default: 2000,\n    defaultDescription: '2000 ms',\n    requiresArg: true\n  },\n  ui: {\n    alias: 'u',\n    describe: 'specify user-interface',\n    choices: ['bdd', 'tdd', 'exports', 'qunit'],\n    group: BASIC_GROUP,\n    default: 'bdd',\n    requiresArg: true\n  },\n  watch: {\n    alias: 'w',\n    type: 'boolean',\n    describe: 'watch files for changes',\n    group: BASIC_GROUP,\n    default: false\n  },\n  'check-leaks': {\n    type: 'boolean',\n    describe: 'check for global variable leaks',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  'full-trace': {\n    type: 'boolean',\n    describe: 'display the full stack trace',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  'inline-diffs': {\n    type: 'boolean',\n    describe: 'display actual/expected differences inline within each string',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  exit: {\n    type: 'boolean',\n    describe: 'require a clean shutdown of the event loop: mocha will not call process.exit',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  retries: {\n    describe: 'set numbers of time to retry a failed test case',\n    group: BASIC_GROUP,\n    requiresArg: true\n  },\n  delay: {\n    type: 'boolean',\n    describe: 'wait for async suite definition',\n    group: ADVANCED_GROUP,\n    default: false\n  },\n  'webpack-config': {\n    type: 'string',\n    describe: 'path to webpack-config file',\n    group: BASIC_GROUP,\n    requiresArg: true\n  },\n  opts: {\n    type: 'string',\n    describe: 'path to webpack-mocha options file',\n    group: BASIC_GROUP,\n    requiresArg: true\n  }\n};\n\nvar paramList = function paramList(opts) {\n  return _lodash2.default.map(_lodash2.default.keys(opts), _lodash2.default.camelCase);\n};\nvar parameters = paramList(options); // camel case parameters\nvar parametersWithMultipleArgs = paramList(_lodash2.default.pickBy(_lodash2.default.mapValues(options, function (v) {\n  return !!v.requiresArg && v.multiple === true;\n}))); // eslint-disable-line max-len\nvar groupedAliases = _lodash2.default.values(_lodash2.default.mapValues(options, function (value, key) {\n  return [_lodash2.default.camelCase(key), key, value.alias].filter(_lodash2.default.identity);\n})); // eslint-disable-line max-len\n\nfunction parseArgv(argv) {\n  var ignoreDefaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var parsedArgs = (0, _yargs2.default)(argv).help('help').alias('help', 'h', '?').version(function () {\n    return _package.version;\n  }).demand(0, 1).options(options).strict().argv;\n\n  var files = parsedArgs._;\n\n  if (!files.length) {\n    files = ['./test'];\n  }\n\n  var parsedOptions = _lodash2.default.pick(parsedArgs, parameters); // pick all parameters as new object\n  var validOptions = _lodash2.default.omitBy(parsedOptions, _lodash2.default.isUndefined); // remove all undefined values\n\n  _lodash2.default.forEach(parametersWithMultipleArgs, function (key) {\n    if (_lodash2.default.has(validOptions, key)) {\n      var value = validOptions[key];\n      if (!Array.isArray(value)) {\n        validOptions[key] = [value];\n      }\n    }\n  });\n\n  _lodash2.default.forOwn(validOptions, function (value, key) {\n    // validate all non-array options with required arg that it is not duplicated\n    // see https://github.com/yargs/yargs/issues/229\n    if (parametersWithMultipleArgs.indexOf(key) === -1 && _lodash2.default.isArray(value)) {\n      (function () {\n        var arg = _lodash2.default.kebabCase(key);\n        var provided = value.map(function (v) {\n          return '--' + arg + ' ' + v;\n        }).join(' ');\n        var expected = '--' + arg + ' ' + value[0];\n\n        throw new Error('Duplicating arguments for \"--' + arg + '\" is not allowed. \"' + provided + '\" was provided, but expected \"' + expected + '\"'); // eslint-disable-line max-len\n      })();\n    }\n  });\n\n  validOptions.files = files;\n\n  var reporterOptions = {};\n\n  if (validOptions.reporterOptions) {\n    validOptions.reporterOptions.split(',').forEach(function (opt) {\n      var L = opt.split('=');\n      if (L.length > 2 || L.length === 0) {\n        throw new Error('invalid reporter option ' + opt);\n      } else if (L.length === 2) {\n        reporterOptions[L[0]] = L[1];\n      } else {\n        reporterOptions[L[0]] = true;\n      }\n    });\n  }\n\n  validOptions.reporterOptions = reporterOptions;\n  validOptions.require = validOptions.require || [];\n  validOptions.include = validOptions.include || [];\n\n  if (ignoreDefaults) {\n    var _ret2 = function () {\n      var userOptions = (0, _yargs2.default)(argv).argv;\n      var providedKeys = _lodash2.default.keys(userOptions);\n      var usedAliases = _lodash2.default.flatten(_lodash2.default.filter(groupedAliases, function (aliases) {\n        return _lodash2.default.some(aliases, function (alias) {\n          return providedKeys.indexOf(alias) !== -1;\n        });\n      }));\n\n      if (parsedArgs._.length) {\n        usedAliases.push('files');\n      }\n\n      return {\n        v: _lodash2.default.pick(validOptions, usedAliases)\n      };\n    }();\n\n    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n  }\n\n  return validOptions;\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/cli/prepareWebpack.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = prepareWebpack;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _normalizePath = require('normalize-path');\n\nvar _normalizePath2 = _interopRequireDefault(_normalizePath);\n\nvar _fsExtra = require('fs-extra');\n\nvar _fsExtra2 = _interopRequireDefault(_fsExtra);\n\nvar _isGlob = require('is-glob');\n\nvar _isGlob2 = _interopRequireDefault(_isGlob);\n\nvar _globParent = require('glob-parent');\n\nvar _globParent2 = _interopRequireDefault(_globParent);\n\nvar _objectHash = require('object-hash');\n\nvar _objectHash2 = _interopRequireDefault(_objectHash);\n\nvar _anymatch = require('anymatch');\n\nvar _anymatch2 = _interopRequireDefault(_anymatch);\n\nvar _webpackInfoPlugin = require('webpack-info-plugin');\n\nvar _webpackInfoPlugin2 = _interopRequireDefault(_webpackInfoPlugin);\n\nvar _exists = require('../util/exists');\n\nvar _contextReplacementPlugin = require('../webpack/contextReplacementPlugin');\n\nvar _contextReplacementPlugin2 = _interopRequireDefault(_contextReplacementPlugin);\n\nvar _prepareEntry = require('../webpack/prepareEntry');\n\nvar _prepareEntry2 = _interopRequireDefault(_prepareEntry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tmpPath = _path2.default.join(process.cwd(), '.tmp', 'mocha-webpack');\n\nvar entryLoader = require.resolve('../webpack/includeFilesLoader');\n\nvar defaultFilePattern = '*.js';\n\nfunction directoryToGlob(directory, options) {\n  var recursive = options.recursive;\n  var glob = options.glob;\n\n\n  var fileGlob = defaultFilePattern;\n\n  if (glob) {\n    if (!(0, _isGlob2.default)(glob)) {\n      throw new Error('Provided Glob ' + glob + ' is not a valid glob pattern');\n    }\n\n    var parent = (0, _globParent2.default)(glob);\n\n    if (parent !== '.' || glob.indexOf('**') !== -1) {\n      throw new Error('Provided Glob ' + glob + ' must be a file pattern like *.js');\n    }\n\n    fileGlob = glob;\n  }\n\n  var normalizedPath = (0, _normalizePath2.default)(directory);\n  var globstar = recursive ? '**/' : '';\n  var filePattern = [globstar, fileGlob].join('');\n\n  return normalizedPath + '/' + filePattern;\n}\n\nfunction createWebpackConfig(webpackConfig, entryFilePath, outputFilePath) {\n  var plugins = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var include = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  // eslint-disable-line max-len\n  var entryFileName = _path2.default.basename(entryFilePath);\n  var entryPath = _path2.default.dirname(entryFilePath);\n\n  var outputFileName = _path2.default.basename(outputFilePath);\n  var outputPath = _path2.default.dirname(outputFilePath);\n\n  var config = _lodash2.default.clone(webpackConfig);\n  config.entry = './' + entryFileName;\n\n  if (include.length) {\n    var query = {\n      include: include\n    };\n    config.entry = entryLoader + '?' + JSON.stringify(query) + '!' + config.entry;\n  }\n\n  config.context = entryPath;\n  config.output = _lodash2.default.extend({}, config.output, {\n    filename: outputFileName,\n    path: outputPath\n  });\n\n  config.plugins = (config.plugins || []).concat(plugins);\n  return config;\n}\n\nfunction prepareWebpack(options, cb) {\n  var _options$files = _slicedToArray(options.files, 1);\n\n  var file = _options$files[0];\n\n  var glob = (0, _isGlob2.default)(file);\n\n  var webpackInfoPlugin = new _webpackInfoPlugin2.default({\n    stats: {\n      // pass options from http://webpack.github.io/docs/node.js-api.html#stats-tostring\n      // context: false,\n      hash: false,\n      version: false,\n      timings: false,\n      assets: false,\n      chunks: false,\n      chunkModules: false,\n      modules: false,\n      children: false,\n      cached: false,\n      reasons: false,\n      source: false,\n      errorDetails: true,\n      chunkOrigins: false,\n      colors: options.colors\n    },\n    state: false });\n\n  var webpackPlugins = [webpackInfoPlugin];\n\n  if (glob || (0, _exists.existsDirSync)(file)) {\n    (function () {\n      var matchModule = function matchModule(mod) {\n        // eslint-disable-line no-inner-declarations\n        // normalize path to match glob\n        var correctedPath = _path2.default.join(parent, mod);\n        return matcher(correctedPath);\n      };\n\n      var globPattern = glob ? file : directoryToGlob(file, options);\n\n      var matcher = (0, _anymatch2.default)(globPattern);\n      var parent = (0, _globParent2.default)(globPattern);\n      var directory = _path2.default.resolve(parent);\n\n      var context = (0, _normalizePath2.default)(_path2.default.relative(tmpPath, directory));\n      var recursive = globPattern.indexOf('**') !== -1; // or via options.recursive?\n\n      var optionsHash = _objectHash2.default.MD5(options); // eslint-disable-line new-cap\n\n      var entryFilePath = _path2.default.join(tmpPath, optionsHash + '-entry.js');\n      var outputFilePath = _path2.default.join(tmpPath, optionsHash, optionsHash + '-output.js');\n\n      webpackPlugins.push((0, _contextReplacementPlugin2.default)(context, matchModule, recursive));\n\n      var webpackConfig = createWebpackConfig(options.webpackConfig, entryFilePath, outputFilePath, webpackPlugins, options.include);\n\n      var fileContent = (0, _prepareEntry2.default)(context, options.watch);\n\n      if (!(0, _exists.existsFileSync)(entryFilePath)) {\n        _fsExtra2.default.outputFile(entryFilePath, fileContent, function (err) {\n          cb(err, webpackConfig);\n        });\n      } else {\n        process.nextTick(function () {\n          cb(null, webpackConfig);\n        });\n      }\n    })();\n  } else if ((0, _exists.existsFileSync)(file)) {\n    (function () {\n      var entryFilePath = _path2.default.resolve(file);\n      var outputFilePath = _path2.default.join(tmpPath, _path2.default.basename(entryFilePath));\n      var webpackConfig = createWebpackConfig(options.webpackConfig, entryFilePath, outputFilePath, webpackPlugins, options.include);\n      process.nextTick(function () {\n        cb(null, webpackConfig);\n      });\n    })();\n  } else {\n    process.nextTick(function () {\n      cb(new Error('File/Directory not found: ' + file));\n    });\n  }\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/util/exists.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.existsFileSync = existsFileSync;\nexports.existsDirSync = existsDirSync;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction existsFileSync(file) {\n  try {\n    _fs2.default.accessSync(file, _fs2.default.F_OK);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction existsDirSync(file) {\n  try {\n    return _fs2.default.statSync(file).isDirectory();\n  } catch (err) {\n    return false;\n  }\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/contextReplacementPlugin.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contextReplacementPlugin;\n\nvar _webpack = require('webpack');\n\nfunction contextReplacementPlugin(context, matcher) {\n  var recursive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  // use ContextReplacementPlugin to replace the initial context with a\n  // new regExp to match the desired files\n  return new _webpack.ContextReplacementPlugin(new RegExp(context), function (result) {\n    if (result.request === context) {\n      // provide a new test function for resolving\n      result.regExp = { test: matcher }; // eslint-disable-line no-param-reassign\n      result.recursive = recursive; // eslint-disable-line no-param-reassign\n    }\n  });\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/prepareEntry.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prepareEntry;\nfunction prepareEntry(path) {\n  var watch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (watch) {\n    return \"\\n    // This gets replaced by webpack with the updated files on rebuild\\n    var __webpackManifest__ = [];\\n\\n    var testsContext = require.context(\\\"\" + path + \"\\\", false);\\n\\n    function inManifest(path) {\\n      return __webpackManifest__.indexOf(path) >= 0;\\n    }\\n\\n    var runnable = testsContext.keys().filter(inManifest);\\n\\n    runnable.forEach(testsContext);\\n    \";\n  }\n  return \"\\n    var testsContext = require.context(\\\"\" + path + \"\\\", false);\\n\\n    var runnable = testsContext.keys();\\n\\n    runnable.forEach(testsContext);\\n    \";\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/cli/runner.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = run;\nexports.watch = watch;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _build = require('../webpack/build');\n\nvar _build2 = _interopRequireDefault(_build);\n\nvar _watch = require('../webpack/watch');\n\nvar _watch2 = _interopRequireDefault(_watch);\n\nvar _InjectChangedFilesPlugin = require('../webpack/InjectChangedFilesPlugin');\n\nvar _InjectChangedFilesPlugin2 = _interopRequireDefault(_InjectChangedFilesPlugin);\n\nvar _configureMocha = require('../mocha/configureMocha');\n\nvar _configureMocha2 = _interopRequireDefault(_configureMocha);\n\nvar _resetMocha = require('../mocha/resetMocha');\n\nvar _resetMocha2 = _interopRequireDefault(_resetMocha);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction exitLater(code) {\n  process.on('exit', function () {\n    process.exit(code);\n  });\n}\n\nfunction exit(code) {\n  process.exit(code);\n}\n\nfunction run(options, webpackConfig) {\n  var mocha = (0, _configureMocha2.default)(options);\n  var outputFilePath = _path2.default.join(webpackConfig.output.path, webpackConfig.output.filename);\n\n  (0, _build2.default)(webpackConfig, function (err) {\n    if (err) {\n      if (options.exit) {\n        exit(1);\n      } else {\n        exitLater(1);\n      }\n    }\n\n    mocha.files = [outputFilePath];\n    mocha.run(options.exit ? exit : exitLater);\n  });\n}\n\nfunction watch(options, webpackConfig) {\n  var mocha = (0, _configureMocha2.default)(options);\n\n  var outputFilePath = _path2.default.join(webpackConfig.output.path, webpackConfig.output.filename);\n\n  var injectChangedFilesPlugin = new _InjectChangedFilesPlugin2.default();\n\n  webpackConfig.plugins.push(injectChangedFilesPlugin);\n\n  var runAgain = false;\n  var mochaRunner = null;\n\n  function runMocha() {\n    // eslint-disable-line no-inner-declarations\n    // clear up require cache to reload test bundle\n    delete require.cache[outputFilePath];\n\n    (0, _resetMocha2.default)(mocha, options);\n    mocha.files = [outputFilePath];\n\n    runAgain = false;\n\n    try {\n      mochaRunner = mocha.run(function (failures) {\n        injectChangedFilesPlugin.testsCompleted(failures > 0);\n\n        // need to wait until next tick, otherwise mochaRunner = null doesn't work..\n        process.nextTick(function () {\n          mochaRunner = null;\n          if (runAgain) {\n            runMocha();\n          }\n        });\n      });\n    } catch (e) {\n      injectChangedFilesPlugin.testsCompleted(true);\n      console.error(e.stack); // eslint-disable-line no-console\n    }\n  }\n\n  (0, _watch2.default)(webpackConfig, function (err) {\n    if (err) {\n      // wait for fixed tests\n      return;\n    }\n\n    runAgain = true;\n\n    if (mochaRunner) {\n      mochaRunner.abort();\n    } else {\n      runMocha();\n    }\n  });\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/build.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = build;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _createCompiler = require('./createCompiler');\n\nvar _createCompiler2 = _interopRequireDefault(_createCompiler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction build(webpackConfig, cb) {\n  var compiler = (0, _createCompiler2.default)(webpackConfig, cb);\n  compiler.run(_lodash2.default.noop);\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/createCompiler.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = createCompiler;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _webpack = require('webpack');\n\nvar _webpack2 = _interopRequireDefault(_webpack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar missing = function missing() {\n  (0, _invariant2.default)(false, 'parameters are missing');\n};\n\nfunction createCompiler(webpackConfig) {\n  var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : missing();\n\n  (0, _invariant2.default)(_lodash2.default.isPlainObject(webpackConfig), 'webpackConfig must be a plain object');\n  (0, _invariant2.default)(_lodash2.default.isFunction(cb), 'cb must be a function');\n\n  var compiler = (0, _webpack2.default)(webpackConfig);\n\n  var failedModules = [];\n  var failedModulesErrors = [];\n\n  compiler.plugin('failed', cb);\n\n  compiler.plugin('compilation', function (compilation) {\n    // Workaround to tag build as failed when webpack marks a failed module as just a warning\n    compilation.plugin('build-module', function (module) {\n      var ident = module.identifier();\n\n      if (ident) {\n        var idx = failedModules.indexOf(ident);\n        if (idx !== -1) {\n          failedModules.splice(idx, 1);\n          failedModulesErrors.splice(idx, 1);\n        }\n      }\n    });\n    compilation.plugin('failed-module', function (module) {\n      var ident = module.identifier();\n      if (ident) {\n        failedModules.push(ident);\n        failedModulesErrors.push(module.error);\n      }\n    });\n  });\n\n  compiler.plugin('done', function (stats) {\n    if (stats.hasErrors()) {\n      var jsonStats = stats.toJson();\n\n      var _jsonStats$errors = _slicedToArray(jsonStats.errors, 1);\n\n      var err = _jsonStats$errors[0];\n\n      cb(err);\n    } else if (failedModulesErrors.length) {\n      var _err = failedModulesErrors[0];\n\n      cb(_err);\n    } else {\n      cb();\n    }\n  });\n  return compiler;\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/watch.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = watch;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _createCompiler = require('./createCompiler');\n\nvar _createCompiler2 = _interopRequireDefault(_createCompiler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction watch(webpackConfig, cb) {\n  var watchOptions = webpackConfig.watchOptions || {};\n  var compiler = (0, _createCompiler2.default)(webpackConfig, cb);\n  compiler.watch(watchOptions, _lodash2.default.noop);\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/InjectChangedFilesPlugin.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ReplaceSource = require('webpack-sources/lib/ReplaceSource');\n\nvar _ReplaceSource2 = _interopRequireDefault(_ReplaceSource);\n\nvar _SourceMapSource = require('webpack-sources/lib/SourceMapSource');\n\nvar _SourceMapSource2 = _interopRequireDefault(_SourceMapSource);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction isBuilt(module) {\n  return module.rawRequest && module.built;\n}\n\nfunction getId(module) {\n  return module.rawRequest;\n}\n\nfunction setTrue(acc, key) {\n  acc[key] = true; // eslint-disable-line no-param-reassign\n  return acc;\n}\n\nfunction getAffectedFiles(modules) {\n  return modules.filter(isBuilt).map(getId).reduce(setTrue, {});\n}\n\nfunction findAllDependentFiles(affectedFiles, seen, module) {\n  if (seen[module.rawRequest]) return;\n  seen[module.rawRequest] = true; // eslint-disable-line no-param-reassign\n\n  if (affectedFiles[module.rawRequest]) return;\n  if (!module.dependencies) return;\n  if (!module.rawRequest) return;\n\n  module.dependencies.forEach(function (dependency) {\n    if (!dependency.module) return;\n\n    findAllDependentFiles(affectedFiles, seen, dependency.module);\n    if (affectedFiles[dependency.module.rawRequest]) {\n      affectedFiles[module.rawRequest] = true; // eslint-disable-line no-param-reassign\n    }\n  });\n}\n\nvar InjectChangedFilesPlugin = function () {\n  function InjectChangedFilesPlugin() {\n    var _this = this;\n\n    _classCallCheck(this, InjectChangedFilesPlugin);\n\n    this.testsCompleted = function (failed) {\n      if (failed) {\n        [].push.apply(_this.failedFiles, _this.hotFiles);\n      } else {\n        _this.failedFiles = [];\n      }\n    };\n\n    this.failedFiles = [];\n    this.hotFiles = [];\n  }\n\n  _createClass(InjectChangedFilesPlugin, [{\n    key: 'apply',\n    value: function apply(compiler) {\n      var _this2 = this;\n\n      compiler.plugin('this-compilation', function (compilation) {\n        compilation.plugin('optimize-chunk-assets', function (chunks, callback) {\n          chunks.forEach(function (chunk) {\n            // find changed files\n            var affectedFiles = getAffectedFiles(chunk.modules);\n            chunk.modules.forEach(findAllDependentFiles.bind(null, affectedFiles, {}));\n            _this2.hotFiles = Object.keys(affectedFiles);\n\n            // and finally set changed files\n            chunk.files.forEach(function (file) {\n              if (!(chunk.isInitial ? chunk.isInitial() : chunk.initial)) {\n                return;\n              }\n              _this2.setChangedFiles(compilation, file);\n            });\n          });\n          callback();\n        });\n      });\n    }\n  }, {\n    key: 'setChangedFiles',\n    value: function setChangedFiles(compilation, file) {\n      var original = compilation.assets[file];\n      var originalSource = original.source();\n      var originalMap = original.map();\n\n      var result = new _ReplaceSource2.default(original);\n      var regex = /__webpackManifest__\\s*=\\s*\\[\\s*\\]/g;\n      var files = this.hotFiles.concat(this.failedFiles);\n      var changedFiles = '[\\'' + files.join(\"', '\") + '\\']';\n      var replacement = '__webpackManifest__ = ' + changedFiles;\n\n      var match = void 0;\n      while ((match = regex.exec(originalSource)) !== null) {\n        // eslint-disable-line no-cond-assign\n        var start = match.index;\n        var end = match.index + (match[0].length - 1);\n        result.replace(start, end, replacement);\n      }\n\n      var resultSource = result.source();\n      var resultMap = result.map();\n\n      compilation.assets[file] = new _SourceMapSource2.default( // eslint-disable-line no-param-reassign\n      resultSource, file, resultMap, originalSource, originalMap);\n    }\n  }]);\n\n  return InjectChangedFilesPlugin;\n}();\n\nexports.default = InjectChangedFilesPlugin;","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/mocha/configureMocha.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = configureMocha;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _mocha = require('mocha');\n\nvar _mocha2 = _interopRequireDefault(_mocha);\n\nvar _checkReporter = require('./checkReporter');\n\nvar _checkReporter2 = _interopRequireDefault(_checkReporter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaults = {\n  reporterOptions: {}\n};\n\nfunction configureMocha() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // infinite stack traces\n  Error.stackTraceLimit = Infinity;\n\n  // init defauls\n  _lodash2.default.defaults(options, defaults);\n\n  // check reporter\n  (0, _checkReporter2.default)(options.reporter);\n\n  // init mocha\n  var mocha = new _mocha2.default();\n\n  // reporter\n  mocha.reporter(options.reporter, options.reporterOptions);\n\n  // colors\n  mocha.useColors(options.colors);\n\n  // inline-diffs\n  mocha.useInlineDiffs(options.inlineDiffs);\n\n  // slow <ms>\n  mocha.suite.slow(options.slow);\n\n  // timeout <ms>\n  if (options.timeout === 0) {\n    mocha.enableTimeouts(false);\n  } else {\n    mocha.suite.timeout(options.timeout);\n  }\n\n  // bail\n  mocha.suite.bail(options.bail);\n\n  // grep\n  if (options.grep) {\n    mocha.grep(new RegExp(options.grep));\n  }\n\n  // fgrep\n  if (options.fgrep) {\n    mocha.grep(options.fgrep);\n  }\n\n  // invert\n  if (options.invert) {\n    mocha.invert();\n  }\n\n  // check-leaks\n  if (options.checkLeaks) {\n    mocha.checkLeaks();\n  }\n\n  // full-trace\n  if (options.fullTrace) {\n    mocha.fullTrace();\n  }\n\n  // growl\n  if (options.growl) {\n    mocha.growl();\n  }\n\n  // async-only\n  if (options.asyncOnly) {\n    mocha.asyncOnly();\n  }\n\n  // delay\n  if (options.delay) {\n    mocha.delay();\n  }\n\n  // retries\n  if (options.retries) {\n    mocha.suite.retries(options.retries);\n  }\n\n  // interface\n  mocha.ui(options.ui);\n\n  return mocha;\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/mocha/checkReporter.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkReporter;\nfunction checkReporter(reporter) {\n  try {\n    require(\"mocha/lib/reporters/\" + reporter); // eslint-disable-line global-require\n  } catch (errModule) {\n    try {\n      require(reporter); // eslint-disable-line global-require\n    } catch (errLocal) {\n      throw new Error(\"reporter \\\"\" + reporter + \"\\\" does not exist\");\n    }\n  }\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/mocha/resetMocha.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resetMocha;\n\nvar _mocha = require('mocha');\n\nfunction resetMocha(mocha, options) {\n  if (options.watch && !options.grep) {\n    mocha.grep(null);\n  }\n  mocha.suite = mocha.suite.clone(); // eslint-disable-line no-param-reassign\n  mocha.suite.ctx = new _mocha.Context(); // eslint-disable-line no-param-reassign\n  mocha.ui(options.ui);\n  return mocha;\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/cli/parseConfig.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseConfig;\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _exists = require('../util/exists');\n\nvar _parseArgv = require('./parseArgv');\n\nvar _parseArgv2 = _interopRequireDefault(_parseArgv);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultConfig = 'mocha-webpack.opts';\n\nfunction handleMissingConfig(config) {\n  if (config) {\n    throw new Error('Options file \\'' + config + '\\' not found');\n  }\n\n  return {};\n}\n\nfunction parseConfig(explicitConfig) {\n  var config = explicitConfig || defaultConfig;\n\n  if (!(0, _exists.existsFileSync)(config)) {\n    return handleMissingConfig(explicitConfig);\n  }\n\n  var argv = _fs2.default.readFileSync(config, 'utf8').replace(/\\\\\\s/g, '%20').split(/\\s/).filter(Boolean).map(function (value) {\n    return value.replace(/%20/g, ' ');\n  });\n  var defaultOptions = (0, _parseArgv2.default)(argv, true);\n  return defaultOptions;\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/cli/requireWebpackConfig.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = requireWebpackConfig;\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _interpret = require('interpret');\n\nvar _interpret2 = _interopRequireDefault(_interpret);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sortExtensions(ext1, ext2) {\n  if (ext1 === '.js') {\n    return -1;\n  }\n  if (ext2 === '.js') {\n    return 1;\n  }\n  return ext1.length - ext2.length;\n}\n\nvar extensions = Object.keys(_interpret2.default.extensions).sort(sortExtensions);\n\nfunction fileExists(filePath) {\n  try {\n    return _fs2.default.lstatSync(filePath).isFile();\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction findConfigFile(dirPath, baseName) {\n  for (var i = 0; i < extensions.length; i++) {\n    var filePath = _path2.default.resolve(dirPath, '' + baseName + extensions[i]);\n    if (fileExists(filePath)) {\n      return filePath;\n    }\n  }\n  return null;\n}\n\nfunction getConfigExtension(configPath) {\n  for (var i = extensions.length - 1; i >= 0; i--) {\n    var extension = extensions[i];\n    if (configPath.indexOf(extension, configPath.length - extension.length) > -1) {\n      return extension;\n    }\n  }\n  return _path2.default.extname(configPath);\n}\n\nfunction registerCompiler(moduleDescriptor) {\n  if (!moduleDescriptor) {\n    return;\n  }\n\n  if (typeof moduleDescriptor === 'string') {\n    require(moduleDescriptor); // eslint-disable-line global-require\n  } else if (!Array.isArray(moduleDescriptor)) {\n    var module = require(moduleDescriptor.module); // eslint-disable-line global-require\n    moduleDescriptor.register(module);\n  } else {\n    for (var i = 0; i < moduleDescriptor.length; i++) {\n      try {\n        registerCompiler(moduleDescriptor[i]);\n        break;\n      } catch (e) {\n        // do nothing\n      }\n    }\n  }\n}\n\nfunction requireWebpackConfig(webpackConfig) {\n  if (!webpackConfig) {\n    return {};\n  }\n\n  var configPath = _path2.default.resolve(webpackConfig);\n  var configExtension = getConfigExtension(configPath);\n\n  if (!fileExists(configPath)) {\n    if (configExtension !== '.js') {\n      return {};\n    }\n\n    var configDirPath = _path2.default.dirname(configPath);\n    var configBaseName = _path2.default.basename(configPath, configExtension);\n\n    configPath = findConfigFile(configDirPath, configBaseName);\n    if (configPath === null) {\n      return {};\n    }\n\n    configExtension = getConfigExtension(configPath);\n  }\n\n  registerCompiler(_interpret2.default.extensions[configExtension]);\n  var config = require(configPath); // eslint-disable-line global-require\n\n  return config.default || config;\n}","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/utils.js":"/*\n * Workaround for mocha-intellij\n * mochaIntellijUtil.js looks for this file in requireMochaModule\n */\n\nmodule.exports = require('mocha/lib/utils');\n","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/reporters/base.js":"/*\n * Workaround for mocha-intellij\n * mochaIntellijUtil.js looks for this file in requireMochaModule\n */\n\nmodule.exports = require('mocha/lib/reporters/base');\n","/home/travis/build/npmtest/node-npmtest-mocha-webpack/node_modules/mocha-webpack/lib/webpack/includeFilesLoader.js":"'use strict';\n\nvar _ReplaceSource = require('webpack-sources/lib/ReplaceSource');\n\nvar _ReplaceSource2 = _interopRequireDefault(_ReplaceSource);\n\nvar _SourceMapSource = require('webpack-sources/lib/SourceMapSource');\n\nvar _SourceMapSource2 = _interopRequireDefault(_SourceMapSource);\n\nvar _OriginalSource = require('webpack-sources/lib/OriginalSource');\n\nvar _OriginalSource2 = _interopRequireDefault(_OriginalSource);\n\nvar _loaderUtils = require('loader-utils');\n\nvar _loaderUtils2 = _interopRequireDefault(_loaderUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar useStrictRegex = /^((\"|')use strict(\"|');)/;\n\n// Note: no export default here cause of Babel 6\nmodule.exports = function includeFilesLoader(sourceCode, sourceMap) {\n  var _this = this;\n\n  this.cacheable();\n\n  var loaderOptions = _loaderUtils2.default.parseQuery(this.query);\n\n  if (loaderOptions.include && loaderOptions.include.length) {\n    var insertIndex = 0;\n    var match = sourceCode.match(useStrictRegex);\n\n    if (match !== null) {\n      insertIndex = match.index + match[0].length;\n    }\n\n    var original = sourceMap ? new _SourceMapSource2.default(sourceCode, _loaderUtils2.default.getCurrentRequest(this), sourceMap) : new _OriginalSource2.default(sourceCode, _loaderUtils2.default.getCurrentRequest(this));\n\n    var originalSource = original.source();\n    var originalMap = original.map();\n\n    var result = new _ReplaceSource2.default(original);\n\n    var includes = loaderOptions.include.map(function (modPath) {\n      return 'require(' + _loaderUtils2.default.stringifyRequest(_this, modPath) + ');';\n    }).join('\\n');\n\n    result.insert(insertIndex, '\\n' + includes);\n\n    if (originalMap) {\n      var source = new _SourceMapSource2.default(result.source(), _loaderUtils2.default.getCurrentRequest(this), result.map(), originalSource, originalMap);\n\n      this.callback(null, source.source(), source.map());\n      return;\n    }\n\n    this.callback(null, result.source());\n    return;\n  }\n\n  this.callback(null, sourceCode, sourceMap);\n};"}